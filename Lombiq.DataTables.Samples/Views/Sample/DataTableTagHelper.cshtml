@model IEnumerable<Lombiq.DataTables.Samples.Models.EmployeePart>

@* This is a static data table. It simply adds the script and stylesheet resources to the page, otherwise it behaves
   like a zero configuration DataTable (https://datatables.net/examples/basic_init/zero_configuration.html). But you
   can pass a JSON encoded configuration object into the data-options attribute too. Use apostrophes instead of quotes
   to avoid encoding problems. *@

@* Always make sure Views/_ViewImports.cshtml has "@addTagHelper *, Lombiq.DataTables.TagHelpers" for the tag helper. *@

<datatable data-options="{ order: [[ 3, 'desc' ]] }">
    <thead>
        <tr>
            <th>@T["Name"]</th>
            <th>@T["Position"]</th>
            <th>@T["Office"]</th>
            <th>@T["Age"]</th>
            <th>@T["Start date"]</th>
            <th>@T["Salary"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model)
        {
            <tr>
                <td>@employee.Name</td>
                <td>@employee.Position</td>
                <td>@employee.Office</td>
                <td>@employee.Age</td>
                <td data-order="@(employee.StartDate.Value?.Ticks ?? 0)">
                    @if (employee.StartDate.Value is { } startDate)
                    {
                        @T["{0:d}", startDate]
                    }
                </td>
                <td data-order="@(employee.Salary.Value ?? 0)">
                    @if (employee.Salary.Value is { } salary)
                    {
                        @T["${0:###,###}", salary]
                    }
                </td>
            </tr>
        }
    </tbody>
</datatable>

@* END OF TRAINING SECTION: The <datatable> Tag Helper *@

@* NEXT STATION: Services/SampleJsonResultDataTableDataProvider.cs*@
