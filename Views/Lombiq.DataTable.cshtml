@using Orchard.Projections.Models
@using Lombiq.DataTables.Constants
@using Lombiq.DataTables.Models
@using Lombiq.DataTables.ViewModels

@{
    Script.Require(ResourceNames.Lombiq_DataTables).AtHead();

    var projectionPart = Model.ContentPart as ProjectionPart;
    var viewModel = Model.ViewModel as DataTableDefinitionViewModel;

    var pageSize = viewModel?.PageSize ?? projectionPart?.Record.Items ?? WorkContext.CurrentSite.PageSize;
    var skip = viewModel?.Skip ?? projectionPart?.Record.Skip ?? 0;

    var queryId = viewModel?.QueryId ?? 0;
    var columnsDefinition = viewModel?.ColumnsDefinition as DataTableColumnsDefinition;
    var columns = columnsDefinition?.GetVisibleColumns().ToList();
    var childRowsEnabled = viewModel?.ChildRowsEnabled ?? false;
    var progressiveLoadingEnabled = viewModel?.ProgressiveLoadingEnabled ?? false;
    var queryStringParametersLocalStorageKey = viewModel?.QueryStringParametersLocalStorageKey ?? "";
    var dataProvider = viewModel?.DataProvider ?? "";
    var dataTableId = string.IsNullOrEmpty(viewModel?.DataTableId) ? ElementNames.DataTableElementName : viewModel.DataTableId;
    var dataTableCssClasses = string.IsNullOrEmpty(viewModel?.DataTableCssClasses) ? ElementNames.DataTableWrapperDefaultElementName : viewModel.DataTableCssClasses;

    var rowApiUrl = Url.HttpRouteUrl("", new { Area = "Lombiq.DataTables", Controller = "DataTablesRow", Action = "Get" });
    var childRowApiUrl = Url.HttpRouteUrl("", new { Area = "Lombiq.DataTables", Controller = "DataTablesChildRow", Action = "Get" });

    const string LoadingIndicatorElementName = ElementNames.DataTableElementName + "__loadingIndicator";
    const string RowElementWithChildRowVisibleModifier = ElementNames.DataTableRowElementName + "_childRowVisible";
    const string ChildRowElementName = ElementNames.DataTableElementName + "__childRow";
    const string ToggleChildRowButtonElementName = ElementNames.DataTableElementName + "__toggleChildRowButton";
}

@Display.Lombiq_DataTable_Resources()

<div class="@dataTableCssClasses">
    @Display.Lombiq_DataTable_Table(
        DataTableId: dataTableId,
        Columns: columns,
        ChildRowsEnabled: childRowsEnabled)
</div>

<script type="text/javascript">
    ; (function ($) {
        $(function () {
            $("#@dataTableId").lombiq_DataTables({
                rowClassName: "@ElementNames.DataTableRowElementName",
                @if (queryId > 0)
                {
                    <text>
                        queryId: @queryId,
                    </text>
                }
                dataProvider: "@dataProvider",
                rowsApiUrl: "@rowApiUrl",
                dataTablesOptions: {
                    @if (pageSize > 0)
                    {
                        <text>
                            pageLength: @pageSize,
                        </text>
                    }
                    language: {
                        processing: "<div class=\"@LoadingIndicatorElementName\">@T("Loading...")</div>"
                    },
                    order: [["@columnsDefinition.GetDefaultSortingColumnIndex()", "@columnsDefinition.GetDefaultSortingDirectionTechnicalValue()"]]
                },
                serverSidePagingEnabled: @(progressiveLoadingEnabled ? "false" : "true"),
                queryStringParametersLocalStorageKey: "@queryStringParametersLocalStorageKey",
                progressiveLoadingOptions: {
                    progressiveLoadingEnabled: @(progressiveLoadingEnabled ? "true" : "false"),
                    @if (progressiveLoadingEnabled)
                    {
                        <text>
                            skip: @skip,
                            batchSize: @pageSize
                        </text>
                    }
                },
                childRowOptions: {
                    childRowsEnabled: @(childRowsEnabled ? "true" : "false"),
                    @if (childRowsEnabled)
                    {
                        <text>
                            asyncLoading: true,
                            apiUrl: "@childRowApiUrl",
                            childRowClassName: "@ChildRowElementName",
                            toggleChildRowButtonClassName: "@ToggleChildRowButtonElementName",
                            childRowVisibleClassName: "@RowElementWithChildRowVisibleModifier",
                        </text>
                    }
                }
            });
        });
    })(jQuery);
</script>